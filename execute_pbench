#!/bin/bash

source ~/.bashrc
chars=`echo $0 | awk -v RS='/' 'END{print NR-1}'`
TOOLS_BIN=`echo $0 | cut -d'/' -f 1-${chars}`

cmd_executing=""
configuration=""
puser=""
run_label=""
spacing=0
sys_type=""
test_name=""
times_to_run=1

#
# Usage information.
#

usage()
{
	echo "$1 usage:"
	echo "  --sysname: name of the system running, used in determing config files"
	echo "tools_git: Pointer to the test_tools git.  Default is ${tools_git}.  Top directory is always test_tools"
	echo "  --tuned_setting: used in naming the tar file"
	echo "  --usage: this usage message"
	echo "  --pbench: use pbench-user-benchmark and place information into pbench"
	echo "  --pbench_user: user who started everything."
	echo "Unused options, present as Zathras passes them in."
	echo "  --host_config"
	echo "  --home_parent"
	echo "  --iterations"
	echo "  --run_label: the label to associate with the pbench run"
	echo "  --run_user"
	echo "  --sys_type"
	exit
}

#
# Now handle the command options
#

i=1
j=$#
separ=""
cmd_options=""
while [ $i -le $j ]
do
        case "$1" in
		--cmd_executing)
			cmd_executing=${2}
			i=$((i + 2))
			shift 2
		;;
		--host_config)
			configuration=${2}
			cmd_options="${cmd_options}${separ}${1} ${2}"
			separ=" "
			i=$((i + 2))
			shift 2
		;;
                --iterations)
			cmd_options="${cmd_options}${separ}--iterations 1"
			separ=" "
                        times_to_run=${2}
			i=$((i + 2))
			shift 2
                ;;
		--pbench)
			i=$((i + 1))
			shift 1
		;;
		--pbench_user)
			puser=$2
			i=$((i + 2))
			shift 2
		;;
		--run_label)
			i=$((i + 2))
			run_label=$2
			shift 2
		;;
		--spacing)
			spacing=${2}
			shift 2
		;;
		--sys_type)
			cmd_options="${cmd_options}${separ}${1} ${2}"
			separ=" "
			sys_type=${2}
			shift 2
		;;
		--test)
			test_name=${2}
			shift 2
		;;
		--)
			break; 
		;;
		*)
			cmd_options="${cmd_options}${separ}${1}"
			separ=" "
			shift 1
			i=$((i + 1))
			if [[ $1 != *"--"* ]]; then
				i=$((i + 1))
				cmd_options="${cmd_options}${separ}${1}"
				shift 1
			fi
		;;
        esac
done

echo $times_to_run > ./iteration.lis
echo pbench-user-benchmark -C ${puser}_${test_name}_test --iteration-list=./iteration.lis -- $cmd_executing ${cmd_options}
pbench-user-benchmark -C ${puser}_${test_name}_test --iteration-list=./iteration.lis -- $cmd_executing ${cmd_options}

dir=`ls -rtd /var/lib/pbench-agent/pben*${test_name}* | tail -1`
echo completed
last_dir=`ls -rtd /tmp/results_${test_name}_* | grep -v tar |  tail -1`
echo $last_dir
pushd $dir > /dev/null
cp $last_dir/${test_name}_results/results_${test_name}*/results_${test_name}.csv .
pwd
echo ${TOOLS_BIN}/convert_csv_to_txt --field_seper : --field_size ${spacing} --results_in results_${test_name}.csv --results_out results.txt
${TOOLS_BIN}/convert_csv_to_txt --field_seper : --field_size ${spacing} --results_in results_${test_name}.csv --results_out results.txt

last_tar=`ls -rtd /tmp/results_${test_name}_*tar |  tail -1`
tar xf $last_tar
cd /tmp
mv_tar_to=`echo $last_tar | sed "s/results_${test_name}/results_pbench_${test_name}/"`
mv $last_tar $mv_tar_to
value=`$TOOLS_BIN/set_pbench_variables --host_config $configuration --sys_type $sys_type --test ${test_name} --pbench_user $puser --run_label $run_label`
results_prefix=`echo $value | cut -d: -f 2`
hostname=`echo $value | cut -d: -f 1`
echo $TOOLS_BIN/pbench_copy_data --hostname "${hostname}" --user "${puser}" --prefix ${results_prefix} >> /tmp/debugging
$TOOLS_BIN/pbench_copy_data --hostname "${hostname}" --user "${puser}" --prefix ${results_prefix}

#
# Move results in /tmp to be results_pbench.....
# Keeps Zathras happy, and matches with what was run.
#
cd /tmp
files=`ls results_*.tar | grep -v pbench`
for i in $files; do
	move_to=`echo $files | sed "s/^results_s/results_pbench_/"`
	mv $i $move_to
done
