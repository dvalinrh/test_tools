#!/bin/bash
#
# Copyright (C) 2022  David Valin dvalin@redhat.com
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License
# as published by the Free Software Foundation; either version 2
# of the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301, USA.
#


usage()
{
	echo Usage $0
	echo "  --field_seper <char>:  character separator"
	echo "  --field_size <n>: size of the fields in the output"
	echo "  --results_in <file>: file converting"
	echo "  --results_out <file>: file to output the results to."
	exit 1
}


ARGUMENT_LIST=(
	"field_seper"
	"field_size"
        "results_in"
        "results_out"
)

NO_ARGUMENTS=(
	"usage"
)

# read arguments
opts=$(getopt \
    --longoptions "$(printf "%s:," "${ARGUMENT_LIST[@]}")" \
    --longoptions "$(printf "%s," "${NO_ARGUMENTS[@]}")" \
    --name "$(basename "$0")" \
    --options "h" \
    -- "$@"
)

if [ $? -ne 0 ]; then
        exit
fi

eval set --$opts

field_seper=""
field_size=""
results_in=""
results_out=""

while [[ $# -gt 0 ]]; do
	case "$1" in
		--field_seper)
			field_seper=$2
			shift 2
		;;
		--field_size)
			field_size=$2
			shift 2
		;;
		--results_in)
			results_in=$2
			shift 2
		;;
		--results_out)
			results_out=$2
			shift 2
		;;
		--usage)
			usage
		;;
		-h)
                        usage "0"
                        shift 1
		;;
		--)
                        break
		;;
                *)
                        echo "not found $1"
                        usage
		;;
	esac
done

rm -rf $results_out
while IFS= read -r line
do
	if [[ $line != *":"* ]]; then
		echo $line >> $results_out
		continue
	fi
	break_down=`echo $line | sed "s/ /_/g" | sed "s/${field_seper}/ /g"`
	for  i in $break_down; do
		printf "%${field_size}s" $i >> $results_out
	done
	printf "\n" >> $results_out
done < "$results_in"
